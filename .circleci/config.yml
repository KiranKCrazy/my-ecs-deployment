# version: 2.1

# orbs:
#   aws-ecr: circleci/aws-ecr@8.0.0
#   aws-ecs: circleci/aws-ecs@2.2.0

# jobs:
#   deploy:
#     docker:
#       - image: cimg/aws:2023.09
#     steps:
#       - checkout
#       - aws-ecs/update-service:
#           family: "your-ecs-task-definition-name"
#           cluster-name: "mycluster"
#           service-name: "my-ecs-service2"
#           container-image-name-updates: "container=public.ecr.aws/w1g6z4w3/repo:latest"
#           aws-region: $AWS_REGION

# workflows:
#   deploy-workflow:
#     jobs:
#       - deploy:
#           context: aws-creds  # CircleCI context containing AWS credentials



#################################################


# version: 2.1

# orbs:
#   terraform: circleci/terraform@3.2.0

# jobs:
#   terraform_apply:
#     docker:
#       - image: cimg/base:stable
#     steps:
#       - checkout
#       - terraform/install:
#           terraform_version: "1.3.7"
#       - run:
#           name: Terraform Init
#           command: terraform init
#       - run:
#           name: Terraform Plan
#           command: terraform plan
#       - run:
#           name: Terraform Apply
#           command: terraform apply -auto-approve

# workflows:
#   terraform:
#     jobs:
#       - terraform_apply:
#           context: aws-creds # Optional: If you're using CircleCI contexts for credentials

################################################################


version: 2.1

orbs:
  terraform: circleci/terraform@3.2.0
  aws-cli: circleci/aws-cli@4.0.0  # For AWS credentials management

jobs:
  terraform_apply:
    docker:
      - image: cimg/aws:2024.01  # Pre-installed with AWS CLI & Terraform
    steps:
      - checkout
      - aws-cli/setup:  # Securely configure AWS credentials
          role-arn: ${AWS_ROLE_ARN}  # Use IAM roles (recommended)
          aws-access-key-id: ${AWS_ACCESS_KEY_ID}  # Fallback (if not using roles)
          aws-secret-access-key: ${AWS_SECRET_ACCESS_KEY}
          aws-region: ${AWS_REGION}
      - terraform/install:
          terraform_version: "1.3.7"
      - run:
          name: Terraform Init
          command: terraform init -input=false
      - run:
          name: Terraform Plan (Save Output)
          command: terraform plan -out=tfplan
      - run:
          name: Terraform Apply
          command: terraform apply -input=false -auto-approve tfplan
      - store_artifacts:  # Save plan for audit
          path: tfplan

workflows:
  terraform_workflow:
    jobs:
      - terraform_apply:
          context: aws-creds  # Use context for AWS creds (recommended)
          filters:
            branches:
              only: main  # Only run on main branch (adjust as needed)
